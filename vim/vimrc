" Use XDG Base Directory if available

if empty($MYVIMRC) | let $MYVIMRC = expand('<sfile>:p') | endif

if !empty($XDG_DATA_HOME)
	set runtimepath^=$XDG_DATA_HOME/vim
	set runtimepath+=$XDG_DATA_HOME/vim/after

	set packpath^=$XDG_DATA_HOME/vim
	set packpath+=$XDG_DATA_HOME/vim/after

	set backupdir=$XDG_DATA_HOME/vim/backup | call mkdir(&backupdir, 'p', 0700)
	set directory=$XDG_DATA_HOME/vim/swap   | call mkdir(&directory, 'p', 0700)
	set viewdir=$XDG_DATA_HOME/vim/view     | call mkdir(&viewdir,   'p', 0700)
	set undodir=$XDG_DATA_HOME/vim/undo     | call mkdir(&undodir,   'p', 0700)

	call mkdir($XDG_DATA_HOME . "/vim/colors",  'p', 0700)
	call mkdir($XDG_DATA_HOME . "/vim/plugins", 'p', 0700)
	call mkdir($XDG_DATA_HOME . "/vim/spell",   'p', 0700)

	set viminfofile=$XDG_DATA_HOME/vim/viminfo
endif

filetype plugin on      " Enable filetype plugingsi
filetype indent on      " Load indent file for detected file type

set history=500         " Sets how many lines of history VIM has to remember
set nocompatible        " Disables compatibility with Vi

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set noexpandtab         " Use tabs instead of spaces
set number              " Show line numbers
set tabstop=4           " Number of spaces a <Tab> counts for

syntax on               " Turn syntax highlighting on
