" Use XDG Base Directory if available

if empty($MYVIMRC) | let $MYVIMRC = expand('<sfile>:p') | endif

if !empty($XDG_CONFIG_HOME)
	set backupdir=$XDG_CONFIG_HOME/vim/backup | call mkdir(&backupdir, 'p', 0700)
	set directory=$XDG_CONFIG_HOME/vim/swap   | call mkdir(&directory, 'p', 0700)
	set viewdir=$XDG_CONFIG_HOME/vim/view     | call mkdir(&viewdir,   'p', 0700)
	set undodir=$XDG_CONFIG_HOME/vim/undo     | call mkdir(&undodir,   'p', 0700)

	call mkdir($XDG_CONFIG_HOME . "/vim/colors",  'p', 0700)
	call mkdir($XDG_CONFIG_HOME . "/vim/plugins", 'p', 0700)
	call mkdir($XDG_CONFIG_HOME . "/vim/spell",   'p', 0700)

	set viminfofile=$XDG_CONFIG_HOME/vim/viminfo
endif

" Automatically install the Vim plugin manager 'vim-plug' if it is not already installed.
" After installation, it triggers plugin installation on Vim startup and reloads the VIMRC.
" For more details, visit: https://github.com/junegunn/vim-plug
let data_dir = split(&runtimepath, ',')[0]
if empty(glob(data_dir . '/autoload/plug.vim'))
	silent execute '!curl -fLo '.shellescape(data_dir).'/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
	autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

filetype plugin on              " Enable filetype plugingsi
filetype indent on              " Load indent file for detected file type

set encoding=utf-8              " Set the default encoding to UTF-8
set hidden                      " Allow switching between buffers without saving them
set history=500                 " Sets how many lines of history VIM has to remember
set nocompatible                " Disables compatibility with Vi
set nomodeline                  " Disable modeline processing to prevent malicious settings from files
set updatetime=1000             " Update the file every second

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set autoindent                  " Copy indent from current line when starting a new line
set backspace=indent,eol,start  " Allow backspacing over everything in insert mode
set noexpandtab                 " Use tabs instead of spaces
set nowrap                      " Do not wrap long lines
set number                      " Displays line numbers on the left side
set tabstop=4                   " Number of spaces a <Tab> counts for
set ruler                       " Show the current line and column number in the status line
set smarttab                    " Use smart tabbing
set shiftwidth=4                " Number of spaces to use for each step of (auto)indent
set splitbelow                  " Split windows below the current window
set splitright                  " Split windows to the right of the current window

syntax on                       " Turn syntax highlighting on

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Install Plugins with Vim-Plug
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

call plug#begin(data_dir.'/plugins')

Plug 'vim-airline/vim-airline'             " Lean & mean status/tabline for vim
Plug 'vim-airline/vim-airline-themes'      " Themes for vim-airline
Plug 'tpope/vim-fugitive'                  " Vim plugin for Git
Plug 'tpope/vim-surround'                  " Vim plugin for manipulate surrounding characters

call plug#end()

" airline
let g:airline_theme="onedark"
let g:airline_powerline_fonts = 1